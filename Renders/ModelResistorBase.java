/*******************************************************************************
 * @author Reika Kalseki
 *
 * Copyright 2017
 *
 * All rights reserved.
 * Distribution of the software in any form is only allowed with
 * explicit, prior permission from the owner.
 ******************************************************************************/
// Date: 13-03-2014 09:44:42
// Template version 1.1
// Java generated by Techne
// Keep in mind that you still need to fill in some blanks
// - ZeuX

package Reika.ElectriCraft.Renders;

import java.util.ArrayList;
import java.util.List;

import org.lwjgl.opengl.GL11;

import net.minecraft.tileentity.TileEntity;

import Reika.DragonAPI.Instantiable.Rendering.LODModelPart;
import Reika.ElectriCraft.Base.TileEntityResistorBase.ColorBand;
import Reika.RotaryCraft.Base.RotaryModelBase;

public abstract class ModelResistorBase extends RotaryModelBase
{
	//fields
	LODModelPart Shape1;
	LODModelPart Shape2a;
	LODModelPart Shape2;
	LODModelPart Shape3a;
	LODModelPart Shape3;
	LODModelPart Shape3b;
	LODModelPart Shape3c;

	public ModelResistorBase()
	{
		textureWidth = 128;
		textureHeight = 128;

		Shape1 = new LODModelPart(this, 63, 0);
		Shape1.addBox(0F, 0F, 0F, 12, 5, 16);
		Shape1.setRotationPoint(-6F, 19F, -8F);
		Shape1.setTextureSize(128, 128);
		Shape1.mirror = true;
		this.setRotation(Shape1, 0F, 0F, 0F);
		Shape2a = new LODModelPart(this, 63, 23);
		Shape2a.addBox(0F, 0F, 0F, 6, 2, 16);
		Shape2a.setRotationPoint(-3F, 12F, -8F);
		Shape2a.setTextureSize(128, 128);
		Shape2a.mirror = true;
		this.setRotation(Shape2a, 0F, 0F, 0F);
		Shape2 = new LODModelPart(this, 0, 18);
		Shape2.addBox(0F, 0F, 0F, 8, 5, 16);
		Shape2.setRotationPoint(-4F, 14F, -8F);
		Shape2.setTextureSize(128, 128);
		Shape2.mirror = true;
		this.setRotation(Shape2, 0F, 0F, 0F);
		Shape3a = new LODModelPart(this, 0, 41);
		Shape3a.addBox(0F, 0F, 0F, 8, 1, 15);
		Shape3a.setRotationPoint(-4F, 12.5F, -7.5F);
		Shape3a.setTextureSize(128, 128);
		Shape3a.mirror = true;
		this.setRotation(Shape3a, 0F, 0F, 0F);
		Shape3 = new LODModelPart(this, 0, 0);
		Shape3.addBox(0F, 0F, 0F, 10, 1, 15);
		Shape3.setRotationPoint(-5F, 16F, -7.5F);
		Shape3.setTextureSize(128, 128);
		Shape3.mirror = true;
		this.setRotation(Shape3, 0F, 0F, 0F);
		Shape3b = new LODModelPart(this, 0, 0);
		Shape3b.addBox(0F, 0F, 0F, 10, 1, 15);
		Shape3b.setRotationPoint(-5F, 14.5F, -7.5F);
		Shape3b.setTextureSize(128, 128);
		Shape3b.mirror = true;
		this.setRotation(Shape3b, 0F, 0F, 0F);
		Shape3c = new LODModelPart(this, 0, 0);
		Shape3c.addBox(0F, 0F, 0F, 10, 1, 15);
		Shape3c.setRotationPoint(-5F, 17.5F, -7.5F);
		Shape3c.setTextureSize(128, 128);
		Shape3c.mirror = true;
		this.setRotation(Shape3c, 0F, 0F, 0F);

		this.addBands();
	}

	protected abstract void addBands();

	protected abstract List<ResistorBand> getBands();

	@Override
	public final void renderAll(TileEntity te, ArrayList li, float phi, float theta) {
		Shape1.render(te, f5);
		Shape2a.render(te, f5);
		Shape2.render(te, f5);
		Shape3a.render(te, f5);
		Shape3.render(te, f5);
		Shape3b.render(te, f5);
		Shape3c.render(te, f5);

		List<ResistorBand> bands = this.getBands();
		for (int i = 0; i < bands.size(); i++) {
			ResistorBand rb = bands.get(i);
			rb.color = (ColorBand) li.get(i);
			rb.color.renderColor.setGLColorBlend();
			rb.partA.render(te, f5);
			rb.partB.render(te, f5);
		}

		GL11.glColor3f(1, 1, 1);
	}

	protected static class ResistorBand {

		private final int index;

		private ColorBand color;

		private final LODModelPart partA;
		private final LODModelPart partB;

		protected ResistorBand(int i, LODModelPart p1, LODModelPart p2) {
			index = i;
			partA = p1;
			partB = p2;
		}

	}

}
